// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Some_more_Test_Cases_Bryan
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Clicking
        /// </summary>
        public void Clicking()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            WinTitleBar uIKeyLoggerTitleBar = this.UIKeyLoggerWindow.UIKeyLoggerTitleBar;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(133, 68));

            // Click 'KeyLogger' title bar
            Mouse.Click(uIKeyLoggerTitleBar, new Point(616, 15));

            // Click text box
            Mouse.Click(uIItemEdit, new Point(229, 121));

            // Click 'KeyLogger' title bar
            Mouse.Click(uIKeyLoggerTitleBar, new Point(672, 24));

            // Click text box
            Mouse.Click(uIItemEdit, new Point(150, 83));

            // Click 'KeyLogger' title bar
            Mouse.Click(uIKeyLoggerTitleBar, new Point(660, 27));

            // Click text box
            Mouse.Click(uIItemEdit, new Point(188, 70));
        }
        
        /// <summary>
        /// UpperLower - Use 'UpperLowerParams' to pass parameters into this method.
        /// </summary>
        public void UpperLower()
        {
            #region Variable Declarations
            WinTitleBar uIUntitledNotepadTitleBar = this.UIUntitledNotepadWindow.UIUntitledNotepadTitleBar;
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Click 'Untitled - Notepad' title bar
            Mouse.Click(uIUntitledNotepadTitleBar, new Point(114, 16));

            // Type 'AcDcAcAcAcAc' in text box
            uIItemEdit.Text = this.UpperLowerParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForEnter - Use 'TestForEnterParams' to pass parameters into this method.
        /// </summary>
        public void TestForEnter()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type the following paragraph in text box 
            //'
            //
            //
            //
            //
            //
            //
            //
            //'
            uIItemEdit.Text = this.TestForEnterParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForBackSpace - Use 'TestForBackSpaceParams' to pass parameters into this method.
        /// </summary>
        public void TestForBackSpace()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type 'Hi My Name Is Bryan. How Are You?' in text box
            uIItemEdit.Text = this.TestForBackSpaceParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForDelete - Use 'TestForDeleteParams' to pass parameters into this method.
        /// </summary>
        public void TestForDelete()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi auctor nibh quis diam auctor elementum. Quisque ac magna lorem. Nam a vestibulum mi. Maecenas quis leo eget arcu placerat tempus. Quisque at ipsum ac urna condimentum finibus ut eu massa. Aenean vitleo molestie felis vestibulum cursus ac a nulla. Aenean dignissim odio vitae nulla tempus molestie. Quisque euismod erat posuere tellus dapibus placerat. Praesent vel justo sit amet nunc sodales pret et vitae lacus. Donec eu auctor mi. Donec mauris lectus, aliquet sed libero eget, rhoncus malesuada urna. In finibus aliquet turpis, eu rhoncus ex suscipit mollis. Nullam convallis, elit vel accumsan mollis, justo erat dapibus orci, ac aliquam lacus elit id quam. Suspendisse at libero ligula. Sed pharetra mattis ipsum, sit amet egestas metus porttitor id.' in text box
            uIItemEdit.Text = this.TestForDeleteParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForArrowKeys - Use 'TestForArrowKeysParams' to pass parameters into this method.
        /// </summary>
        public void TestForArrowKeys()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(210, 298));

            // Type '{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Left}{Right}{Left}{Up}{Left}{Up}{Up}{Left}{Up}{Left}{Up}{Left}{Right}{Left}{Up}{Down}{Up}{Down}{Right}{Up}{Left}' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestForArrowKeysParams.UIItemEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// TestAltplusA - Use 'TestAltplusAParams' to pass parameters into this method.
        /// </summary>
        public void TestAltplusA()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type 'hello world' in text box
            uIItemEdit.Text = this.TestAltplusAParams.UIItemEditText;

            // Type 'Control + a' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestAltplusAParams.UIItemEditSendKeys, ModifierKeys.Control);

            // Type '{Right}{LControlKey}' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestAltplusAParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Type 'Control + a' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestAltplusAParams.UIItemEditSendKeys2, ModifierKeys.Control);

            // Type '{Right}{LControlKey}' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestAltplusAParams.UIItemEditSendKeys3, ModifierKeys.None);

            // Type 'Control + a' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestAltplusAParams.UIItemEditSendKeys4, ModifierKeys.Control);

            // Type '{Right}' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestAltplusAParams.UIItemEditSendKeys5, ModifierKeys.None);
        }
        
        /// <summary>
        /// TestAltplusC - Use 'TestAltplusCParams' to pass parameters into this method.
        /// </summary>
        public void TestAltplusC()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type the following paragraph in text box 
            //'hell world
            //hell world
            //hell world
            //hell world'
            uIItemEdit.Text = this.TestAltplusCParams.UIItemEditText;
        }
        
        /// <summary>
        /// Testslashr - Use 'TestslashrParams' to pass parameters into this method.
        /// </summary>
        public void Testslashr()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '\r\r\r\r\r' in text box
            uIItemEdit.Text = this.TestslashrParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestCapsLock - Use 'TestCapsLockParams' to pass parameters into this method.
        /// </summary>
        public void TestCapsLock()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type the following paragraph in text box 
            //'caps lock is turned off
            //CAPS LOCK IS TURNED ON'
            uIItemEdit.Text = this.TestCapsLockParams.UIItemEditText;

            // Type '{CapsLock}' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestCapsLockParams.UIItemEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// TestCapsLockWithShiftDown - Use 'TestCapsLockWithShiftDownParams' to pass parameters into this method.
        /// </summary>
        public void TestCapsLockWithShiftDown()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type the following paragraph in text box 
            //'THIS IS CAPS LOCK ON
            //this is caps lock on with holding shift down'
            uIItemEdit.Text = this.TestCapsLockWithShiftDownParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForControlS - Use 'TestForControlSParams' to pass parameters into this method.
        /// </summary>
        public void TestForControlS()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            WinEdit uIFilenameEdit = this.UISaveAsWindow.UIItemWindow.UIFilenameEdit;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(342, 261));

            // Type 'Alt + n' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestForControlSParams.UIItemEditSendKeys, ModifierKeys.Alt);

            // Type 'Control + n' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestForControlSParams.UIItemEditSendKeys1, ModifierKeys.Control);

            // Type 'HELLO WORLD' in text box
            uIItemEdit.Text = this.TestForControlSParams.UIItemEditText;

            // Type 'Control + s' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestForControlSParams.UIItemEditSendKeys2, ModifierKeys.Control);

            // Type '{Escape}' in 'File name:' text box
            Keyboard.SendKeys(uIFilenameEdit, this.TestForControlSParams.UIFilenameEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ControlplusN - Use 'ControlplusNParams' to pass parameters into this method.
        /// </summary>
        public void ControlplusN()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            WinButton uISaveButton = this.UINotepadWindow.UINotepadPane.UISaveButton;
            #endregion

            // Type the following paragraph in text box 
            //'hELLO WORLD
            //'
            uIItemEdit.Text = this.ControlplusNParams.UIItemEditText;

            // Type 'Control + n' in text box
            Keyboard.SendKeys(uIItemEdit, this.ControlplusNParams.UIItemEditSendKeys, ModifierKeys.Control);

            // Type '{Escape}' in '&Save' button
            Keyboard.SendKeys(uISaveButton, this.ControlplusNParams.UISaveButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ClickingInNotepad - Use 'ClickingInNotepadParams' to pass parameters into this method.
        /// </summary>
        public void ClickingInNotepad()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            WinMenuItem uINewCtrlNMenuItem = this.UIUntitledNotepadWindow.UIApplicationMenuBar.UIFileMenuItem.UINewCtrlNMenuItem;
            WinButton uICancelButton = this.UINotepadWindow.UINotepadPane.UICancelButton;
            #endregion

            // Type the following paragraph in text box 
            //'hELLO WORLD
            //How are you?'
            uIItemEdit.Text = this.ClickingInNotepadParams.UIItemEditText;

            // Click 'File' -> 'New Ctrl+N' menu item
            Mouse.Click(uINewCtrlNMenuItem, new Point(90, 3));

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(43, 17));
        }
        
        /// <summary>
        /// TestForNumPad1 - Use 'TestForNumPad1Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad1()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '111111111111111' in text box
            uIItemEdit.Text = this.TestForNumPad1Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad2 - Use 'TestForNumPad2Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad2()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '222222222' in text box
            uIItemEdit.Text = this.TestForNumPad2Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad3 - Use 'TestForNumPad3Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad3()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '33333333333' in text box
            uIItemEdit.Text = this.TestForNumPad3Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad4 - Use 'TestForNumPad4Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad4()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '4444444444444' in text box
            uIItemEdit.Text = this.TestForNumPad4Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad5 - Use 'TestForNumPad5Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad5()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '5555555555' in text box
            uIItemEdit.Text = this.TestForNumPad5Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad6 - Use 'TestForNumPad6Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad6()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '66666666666' in text box
            uIItemEdit.Text = this.TestForNumPad6Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad7 - Use 'TestForNumPad7Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad7()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '777777777777' in text box
            uIItemEdit.Text = this.TestForNumPad7Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad8 - Use 'TestForNumPad8Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad8()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '88888888888' in text box
            uIItemEdit.Text = this.TestForNumPad8Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad9 - Use 'TestForNumPad9Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad9()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '000000000000000' in text box
            uIItemEdit.Text = this.TestForNumPad9Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPadPeriod - Use 'TestForNumPadPeriodParams' to pass parameters into this method.
        /// </summary>
        public void TestForNumPadPeriod()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '...................' in text box
            uIItemEdit.Text = this.TestForNumPadPeriodParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPadPlus - Use 'TestForNumPadPlusParams' to pass parameters into this method.
        /// </summary>
        public void TestForNumPadPlus()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '++++++++++++++++++' in text box
            uIItemEdit.Text = this.TestForNumPadPlusParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPadMinus - Use 'TestForNumPadMinusParams' to pass parameters into this method.
        /// </summary>
        public void TestForNumPadMinus()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '--------------------' in text box
            uIItemEdit.Text = this.TestForNumPadMinusParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPadMultiply - Use 'TestForNumPadMultiplyParams' to pass parameters into this method.
        /// </summary>
        public void TestForNumPadMultiply()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '******************************' in text box
            uIItemEdit.Text = this.TestForNumPadMultiplyParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPadDivide - Use 'TestForNumPadDivideParams' to pass parameters into this method.
        /// </summary>
        public void TestForNumPadDivide()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '////////////////////////' in text box
            uIItemEdit.Text = this.TestForNumPadDivideParams.UIItemEditText;
        }
        
        /// <summary>
        /// TestForNumPad0 - Use 'TestForNumPad0Params' to pass parameters into this method.
        /// </summary>
        public void TestForNumPad0()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '999999999999999999999' in text box
            uIItemEdit.Text = this.TestForNumPad0Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestFortTab - Use 'TestFortTabParams' to pass parameters into this method.
        /// </summary>
        public void TestFortTab()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type 'HELLO 	HELLO	HELLO	.' in text box
            uIItemEdit.Text = this.TestFortTabParams.UIItemEditText;
        }
        
        /// <summary>
        /// Random - Use 'RandomParams' to pass parameters into this method.
        /// </summary>
        public void Random()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type 'fghsfhsh' in text box
            uIItemEdit.Text = this.RandomParams.UIItemEditText;

            // Move text box
            Mouse.StartDragging(uIItemEdit, new Point(287, 142));
            Mouse.StopDragging(uIItemEdit, -270, -128);
        }
        
        /// <summary>
        /// ThisShouldBackwordsSlash - Use 'ThisShouldBackwordsSlashParams' to pass parameters into this method.
        /// </summary>
        public void ThisShouldBackwordsSlash()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' in text box
            uIItemEdit.Text = this.ThisShouldBackwordsSlashParams.UIItemEditText;
        }
        
        #region Properties
        public virtual UpperLowerParams UpperLowerParams
        {
            get
            {
                if ((this.mUpperLowerParams == null))
                {
                    this.mUpperLowerParams = new UpperLowerParams();
                }
                return this.mUpperLowerParams;
            }
        }
        
        public virtual TestForEnterParams TestForEnterParams
        {
            get
            {
                if ((this.mTestForEnterParams == null))
                {
                    this.mTestForEnterParams = new TestForEnterParams();
                }
                return this.mTestForEnterParams;
            }
        }
        
        public virtual TestForBackSpaceParams TestForBackSpaceParams
        {
            get
            {
                if ((this.mTestForBackSpaceParams == null))
                {
                    this.mTestForBackSpaceParams = new TestForBackSpaceParams();
                }
                return this.mTestForBackSpaceParams;
            }
        }
        
        public virtual TestForDeleteParams TestForDeleteParams
        {
            get
            {
                if ((this.mTestForDeleteParams == null))
                {
                    this.mTestForDeleteParams = new TestForDeleteParams();
                }
                return this.mTestForDeleteParams;
            }
        }
        
        public virtual TestForArrowKeysParams TestForArrowKeysParams
        {
            get
            {
                if ((this.mTestForArrowKeysParams == null))
                {
                    this.mTestForArrowKeysParams = new TestForArrowKeysParams();
                }
                return this.mTestForArrowKeysParams;
            }
        }
        
        public virtual TestAltplusAParams TestAltplusAParams
        {
            get
            {
                if ((this.mTestAltplusAParams == null))
                {
                    this.mTestAltplusAParams = new TestAltplusAParams();
                }
                return this.mTestAltplusAParams;
            }
        }
        
        public virtual TestAltplusCParams TestAltplusCParams
        {
            get
            {
                if ((this.mTestAltplusCParams == null))
                {
                    this.mTestAltplusCParams = new TestAltplusCParams();
                }
                return this.mTestAltplusCParams;
            }
        }
        
        public virtual TestslashrParams TestslashrParams
        {
            get
            {
                if ((this.mTestslashrParams == null))
                {
                    this.mTestslashrParams = new TestslashrParams();
                }
                return this.mTestslashrParams;
            }
        }
        
        public virtual TestCapsLockParams TestCapsLockParams
        {
            get
            {
                if ((this.mTestCapsLockParams == null))
                {
                    this.mTestCapsLockParams = new TestCapsLockParams();
                }
                return this.mTestCapsLockParams;
            }
        }
        
        public virtual TestCapsLockWithShiftDownParams TestCapsLockWithShiftDownParams
        {
            get
            {
                if ((this.mTestCapsLockWithShiftDownParams == null))
                {
                    this.mTestCapsLockWithShiftDownParams = new TestCapsLockWithShiftDownParams();
                }
                return this.mTestCapsLockWithShiftDownParams;
            }
        }
        
        public virtual TestForControlSParams TestForControlSParams
        {
            get
            {
                if ((this.mTestForControlSParams == null))
                {
                    this.mTestForControlSParams = new TestForControlSParams();
                }
                return this.mTestForControlSParams;
            }
        }
        
        public virtual ControlplusNParams ControlplusNParams
        {
            get
            {
                if ((this.mControlplusNParams == null))
                {
                    this.mControlplusNParams = new ControlplusNParams();
                }
                return this.mControlplusNParams;
            }
        }
        
        public virtual ClickingInNotepadParams ClickingInNotepadParams
        {
            get
            {
                if ((this.mClickingInNotepadParams == null))
                {
                    this.mClickingInNotepadParams = new ClickingInNotepadParams();
                }
                return this.mClickingInNotepadParams;
            }
        }
        
        public virtual TestForNumPad1Params TestForNumPad1Params
        {
            get
            {
                if ((this.mTestForNumPad1Params == null))
                {
                    this.mTestForNumPad1Params = new TestForNumPad1Params();
                }
                return this.mTestForNumPad1Params;
            }
        }
        
        public virtual TestForNumPad2Params TestForNumPad2Params
        {
            get
            {
                if ((this.mTestForNumPad2Params == null))
                {
                    this.mTestForNumPad2Params = new TestForNumPad2Params();
                }
                return this.mTestForNumPad2Params;
            }
        }
        
        public virtual TestForNumPad3Params TestForNumPad3Params
        {
            get
            {
                if ((this.mTestForNumPad3Params == null))
                {
                    this.mTestForNumPad3Params = new TestForNumPad3Params();
                }
                return this.mTestForNumPad3Params;
            }
        }
        
        public virtual TestForNumPad4Params TestForNumPad4Params
        {
            get
            {
                if ((this.mTestForNumPad4Params == null))
                {
                    this.mTestForNumPad4Params = new TestForNumPad4Params();
                }
                return this.mTestForNumPad4Params;
            }
        }
        
        public virtual TestForNumPad5Params TestForNumPad5Params
        {
            get
            {
                if ((this.mTestForNumPad5Params == null))
                {
                    this.mTestForNumPad5Params = new TestForNumPad5Params();
                }
                return this.mTestForNumPad5Params;
            }
        }
        
        public virtual TestForNumPad6Params TestForNumPad6Params
        {
            get
            {
                if ((this.mTestForNumPad6Params == null))
                {
                    this.mTestForNumPad6Params = new TestForNumPad6Params();
                }
                return this.mTestForNumPad6Params;
            }
        }
        
        public virtual TestForNumPad7Params TestForNumPad7Params
        {
            get
            {
                if ((this.mTestForNumPad7Params == null))
                {
                    this.mTestForNumPad7Params = new TestForNumPad7Params();
                }
                return this.mTestForNumPad7Params;
            }
        }
        
        public virtual TestForNumPad8Params TestForNumPad8Params
        {
            get
            {
                if ((this.mTestForNumPad8Params == null))
                {
                    this.mTestForNumPad8Params = new TestForNumPad8Params();
                }
                return this.mTestForNumPad8Params;
            }
        }
        
        public virtual TestForNumPad9Params TestForNumPad9Params
        {
            get
            {
                if ((this.mTestForNumPad9Params == null))
                {
                    this.mTestForNumPad9Params = new TestForNumPad9Params();
                }
                return this.mTestForNumPad9Params;
            }
        }
        
        public virtual TestForNumPadPeriodParams TestForNumPadPeriodParams
        {
            get
            {
                if ((this.mTestForNumPadPeriodParams == null))
                {
                    this.mTestForNumPadPeriodParams = new TestForNumPadPeriodParams();
                }
                return this.mTestForNumPadPeriodParams;
            }
        }
        
        public virtual TestForNumPadPlusParams TestForNumPadPlusParams
        {
            get
            {
                if ((this.mTestForNumPadPlusParams == null))
                {
                    this.mTestForNumPadPlusParams = new TestForNumPadPlusParams();
                }
                return this.mTestForNumPadPlusParams;
            }
        }
        
        public virtual TestForNumPadMinusParams TestForNumPadMinusParams
        {
            get
            {
                if ((this.mTestForNumPadMinusParams == null))
                {
                    this.mTestForNumPadMinusParams = new TestForNumPadMinusParams();
                }
                return this.mTestForNumPadMinusParams;
            }
        }
        
        public virtual TestForNumPadMultiplyParams TestForNumPadMultiplyParams
        {
            get
            {
                if ((this.mTestForNumPadMultiplyParams == null))
                {
                    this.mTestForNumPadMultiplyParams = new TestForNumPadMultiplyParams();
                }
                return this.mTestForNumPadMultiplyParams;
            }
        }
        
        public virtual TestForNumPadDivideParams TestForNumPadDivideParams
        {
            get
            {
                if ((this.mTestForNumPadDivideParams == null))
                {
                    this.mTestForNumPadDivideParams = new TestForNumPadDivideParams();
                }
                return this.mTestForNumPadDivideParams;
            }
        }
        
        public virtual TestForNumPad0Params TestForNumPad0Params
        {
            get
            {
                if ((this.mTestForNumPad0Params == null))
                {
                    this.mTestForNumPad0Params = new TestForNumPad0Params();
                }
                return this.mTestForNumPad0Params;
            }
        }
        
        public virtual TestFortTabParams TestFortTabParams
        {
            get
            {
                if ((this.mTestFortTabParams == null))
                {
                    this.mTestFortTabParams = new TestFortTabParams();
                }
                return this.mTestFortTabParams;
            }
        }
        
        public virtual RandomParams RandomParams
        {
            get
            {
                if ((this.mRandomParams == null))
                {
                    this.mRandomParams = new RandomParams();
                }
                return this.mRandomParams;
            }
        }
        
        public virtual ThisShouldBackwordsSlashParams ThisShouldBackwordsSlashParams
        {
            get
            {
                if ((this.mThisShouldBackwordsSlashParams == null))
                {
                    this.mThisShouldBackwordsSlashParams = new ThisShouldBackwordsSlashParams();
                }
                return this.mThisShouldBackwordsSlashParams;
            }
        }
        
        public UIUntitledNotepadWindow UIUntitledNotepadWindow
        {
            get
            {
                if ((this.mUIUntitledNotepadWindow == null))
                {
                    this.mUIUntitledNotepadWindow = new UIUntitledNotepadWindow();
                }
                return this.mUIUntitledNotepadWindow;
            }
        }
        
        public UIKeyLoggerWindow UIKeyLoggerWindow
        {
            get
            {
                if ((this.mUIKeyLoggerWindow == null))
                {
                    this.mUIKeyLoggerWindow = new UIKeyLoggerWindow();
                }
                return this.mUIKeyLoggerWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UINotepadWindow UINotepadWindow
        {
            get
            {
                if ((this.mUINotepadWindow == null))
                {
                    this.mUINotepadWindow = new UINotepadWindow();
                }
                return this.mUINotepadWindow;
            }
        }
        #endregion
        
        #region Fields
        private UpperLowerParams mUpperLowerParams;
        
        private TestForEnterParams mTestForEnterParams;
        
        private TestForBackSpaceParams mTestForBackSpaceParams;
        
        private TestForDeleteParams mTestForDeleteParams;
        
        private TestForArrowKeysParams mTestForArrowKeysParams;
        
        private TestAltplusAParams mTestAltplusAParams;
        
        private TestAltplusCParams mTestAltplusCParams;
        
        private TestslashrParams mTestslashrParams;
        
        private TestCapsLockParams mTestCapsLockParams;
        
        private TestCapsLockWithShiftDownParams mTestCapsLockWithShiftDownParams;
        
        private TestForControlSParams mTestForControlSParams;
        
        private ControlplusNParams mControlplusNParams;
        
        private ClickingInNotepadParams mClickingInNotepadParams;
        
        private TestForNumPad1Params mTestForNumPad1Params;
        
        private TestForNumPad2Params mTestForNumPad2Params;
        
        private TestForNumPad3Params mTestForNumPad3Params;
        
        private TestForNumPad4Params mTestForNumPad4Params;
        
        private TestForNumPad5Params mTestForNumPad5Params;
        
        private TestForNumPad6Params mTestForNumPad6Params;
        
        private TestForNumPad7Params mTestForNumPad7Params;
        
        private TestForNumPad8Params mTestForNumPad8Params;
        
        private TestForNumPad9Params mTestForNumPad9Params;
        
        private TestForNumPadPeriodParams mTestForNumPadPeriodParams;
        
        private TestForNumPadPlusParams mTestForNumPadPlusParams;
        
        private TestForNumPadMinusParams mTestForNumPadMinusParams;
        
        private TestForNumPadMultiplyParams mTestForNumPadMultiplyParams;
        
        private TestForNumPadDivideParams mTestForNumPadDivideParams;
        
        private TestForNumPad0Params mTestForNumPad0Params;
        
        private TestFortTabParams mTestFortTabParams;
        
        private RandomParams mRandomParams;
        
        private ThisShouldBackwordsSlashParams mThisShouldBackwordsSlashParams;
        
        private UIUntitledNotepadWindow mUIUntitledNotepadWindow;
        
        private UIKeyLoggerWindow mUIKeyLoggerWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UINotepadWindow mUINotepadWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UpperLower'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UpperLowerParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'AcDcAcAcAcAc' in text box
        /// </summary>
        public string UIItemEditText = "AcDcAcAcAcAc";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForEnter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForEnterParams
    {
        
        #region Fields
        /// <summary>
        /// Type the following paragraph in text box 
        ///'
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///'
        /// </summary>
        public string UIItemEditText = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForBackSpace'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForBackSpaceParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Hi My Name Is Bryan. How Are You?' in text box
        /// </summary>
        public string UIItemEditText = "Hi My Name Is Bryan. How Are You?";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForDelete'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForDeleteParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi auctor nibh quis diam auctor elementum. Quisque ac magna lorem. Nam a vestibulum mi. Maecenas quis leo eget arcu placerat tempus. Quisque at ipsum ac urna condimentum finibus ut eu massa. Aenean vitleo molestie felis vestibulum cursus ac a nulla. Aenean dignissim odio vitae nulla tempus molestie. Quisque euismod erat posuere tellus dapibus placerat. Praesent vel justo sit amet nunc sodales pret et vitae lacus. Donec eu auctor mi. Donec mauris lectus, aliquet sed libero eget, rhoncus malesuada urna. In finibus aliquet turpis, eu rhoncus ex suscipit mollis. Nullam convallis, elit vel accumsan mollis, justo erat dapibus orci, ac aliquam lacus elit id quam. Suspendisse at libero ligula. Sed pharetra mattis ipsum, sit amet egestas metus porttitor id.' in text box
        /// </summary>
        public string UIItemEditText = @"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi auctor nibh quis diam auctor elementum. Quisque ac magna lorem. Nam a vestibulum mi. Maecenas quis leo eget arcu placerat tempus. Quisque at ipsum ac urna condimentum finibus ut eu massa. Aenean vitleo molestie felis vestibulum cursus ac a nulla. Aenean dignissim odio vitae nulla tempus molestie. Quisque euismod erat posuere tellus dapibus placerat. Praesent vel justo sit amet nunc sodales pret et vitae lacus. Donec eu auctor mi. Donec mauris lectus, aliquet sed libero eget, rhoncus malesuada urna. In finibus aliquet turpis, eu rhoncus ex suscipit mollis. Nullam convallis, elit vel accumsan mollis, justo erat dapibus orci, ac aliquam lacus elit id quam. Suspendisse at libero ligula. Sed pharetra mattis ipsum, sit amet egestas metus porttitor id.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForArrowKeys'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForArrowKeysParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Left}{Right}{Left}{Up}{Left}{Up}{Up}{Left}{Up}{Left}{Up}{Left}{Right}{Left}{Up}{Down}{Up}{Down}{Right}{Up}{Left}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Down}{Up}{Left}{Right}{Left}{Up}{Lef" +
            "t}{Up}{Up}{Left}{Up}{Left}{Up}{Left}{Right}{Left}{Up}{Down}{Up}{Down}{Right}{Up}" +
            "{Left}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestAltplusA'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestAltplusAParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'hello world' in text box
        /// </summary>
        public string UIItemEditText = "hello world";
        
        /// <summary>
        /// Type 'Control + a' in text box
        /// </summary>
        public string UIItemEditSendKeys = "a";
        
        /// <summary>
        /// Type '{Right}{LControlKey}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Right}{LControlKey}";
        
        /// <summary>
        /// Type 'Control + a' in text box
        /// </summary>
        public string UIItemEditSendKeys2 = "a";
        
        /// <summary>
        /// Type '{Right}{LControlKey}' in text box
        /// </summary>
        public string UIItemEditSendKeys3 = "{Right}{LControlKey}";
        
        /// <summary>
        /// Type 'Control + a' in text box
        /// </summary>
        public string UIItemEditSendKeys4 = "a";
        
        /// <summary>
        /// Type '{Right}' in text box
        /// </summary>
        public string UIItemEditSendKeys5 = "{Right}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestAltplusC'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestAltplusCParams
    {
        
        #region Fields
        /// <summary>
        /// Type the following paragraph in text box 
        ///'hell world
        ///hell world
        ///hell world
        ///hell world'
        /// </summary>
        public string UIItemEditText = "hell world\r\nhell world\r\nhell world\r\nhell world";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Testslashr'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestslashrParams
    {
        
        #region Fields
        /// <summary>
        /// Type '\r\r\r\r\r' in text box
        /// </summary>
        public string UIItemEditText = "\\r\\r\\r\\r\\r";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestCapsLock'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestCapsLockParams
    {
        
        #region Fields
        /// <summary>
        /// Type the following paragraph in text box 
        ///'caps lock is turned off
        ///CAPS LOCK IS TURNED ON'
        /// </summary>
        public string UIItemEditText = "caps lock is turned off\r\nCAPS LOCK IS TURNED ON";
        
        /// <summary>
        /// Type '{CapsLock}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{CapsLock}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestCapsLockWithShiftDown'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestCapsLockWithShiftDownParams
    {
        
        #region Fields
        /// <summary>
        /// Type the following paragraph in text box 
        ///'THIS IS CAPS LOCK ON
        ///this is caps lock on with holding shift down'
        /// </summary>
        public string UIItemEditText = "THIS IS CAPS LOCK ON\r\nthis is caps lock on with holding shift down";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForControlS'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForControlSParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Alt + n' in text box
        /// </summary>
        public string UIItemEditSendKeys = "n";
        
        /// <summary>
        /// Type 'Control + n' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "n";
        
        /// <summary>
        /// Type 'HELLO WORLD' in text box
        /// </summary>
        public string UIItemEditText = "HELLO WORLD";
        
        /// <summary>
        /// Type 'Control + s' in text box
        /// </summary>
        public string UIItemEditSendKeys2 = "s";
        
        /// <summary>
        /// Type '{Escape}' in 'File name:' text box
        /// </summary>
        public string UIFilenameEditSendKeys = "{Escape}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ControlplusN'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ControlplusNParams
    {
        
        #region Fields
        /// <summary>
        /// Type the following paragraph in text box 
        ///'hELLO WORLD
        ///'
        /// </summary>
        public string UIItemEditText = "hELLO WORLD\r\n";
        
        /// <summary>
        /// Type 'Control + n' in text box
        /// </summary>
        public string UIItemEditSendKeys = "n";
        
        /// <summary>
        /// Type '{Escape}' in '&Save' button
        /// </summary>
        public string UISaveButtonSendKeys = "{Escape}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickingInNotepad'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ClickingInNotepadParams
    {
        
        #region Fields
        /// <summary>
        /// Type the following paragraph in text box 
        ///'hELLO WORLD
        ///How are you?'
        /// </summary>
        public string UIItemEditText = "hELLO WORLD\r\nHow are you?";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '111111111111111' in text box
        /// </summary>
        public string UIItemEditText = "111111111111111";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '222222222' in text box
        /// </summary>
        public string UIItemEditText = "222222222";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad3Params
    {
        
        #region Fields
        /// <summary>
        /// Type '33333333333' in text box
        /// </summary>
        public string UIItemEditText = "33333333333";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad4Params
    {
        
        #region Fields
        /// <summary>
        /// Type '4444444444444' in text box
        /// </summary>
        public string UIItemEditText = "4444444444444";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad5Params
    {
        
        #region Fields
        /// <summary>
        /// Type '5555555555' in text box
        /// </summary>
        public string UIItemEditText = "5555555555";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad6Params
    {
        
        #region Fields
        /// <summary>
        /// Type '66666666666' in text box
        /// </summary>
        public string UIItemEditText = "66666666666";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad7Params
    {
        
        #region Fields
        /// <summary>
        /// Type '777777777777' in text box
        /// </summary>
        public string UIItemEditText = "777777777777";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad8Params
    {
        
        #region Fields
        /// <summary>
        /// Type '88888888888' in text box
        /// </summary>
        public string UIItemEditText = "88888888888";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad9Params
    {
        
        #region Fields
        /// <summary>
        /// Type '000000000000000' in text box
        /// </summary>
        public string UIItemEditText = "000000000000000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPadPeriod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPadPeriodParams
    {
        
        #region Fields
        /// <summary>
        /// Type '...................' in text box
        /// </summary>
        public string UIItemEditText = "...................";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPadPlus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPadPlusParams
    {
        
        #region Fields
        /// <summary>
        /// Type '++++++++++++++++++' in text box
        /// </summary>
        public string UIItemEditText = "++++++++++++++++++";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPadMinus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPadMinusParams
    {
        
        #region Fields
        /// <summary>
        /// Type '--------------------' in text box
        /// </summary>
        public string UIItemEditText = "--------------------";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPadMultiply'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPadMultiplyParams
    {
        
        #region Fields
        /// <summary>
        /// Type '******************************' in text box
        /// </summary>
        public string UIItemEditText = "******************************";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPadDivide'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPadDivideParams
    {
        
        #region Fields
        /// <summary>
        /// Type '////////////////////////' in text box
        /// </summary>
        public string UIItemEditText = "////////////////////////";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForNumPad0'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForNumPad0Params
    {
        
        #region Fields
        /// <summary>
        /// Type '999999999999999999999' in text box
        /// </summary>
        public string UIItemEditText = "999999999999999999999";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestFortTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestFortTabParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'HELLO 	HELLO	HELLO	.' in text box
        /// </summary>
        public string UIItemEditText = "HELLO \tHELLO\tHELLO\t.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Random'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RandomParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'fghsfhsh' in text box
        /// </summary>
        public string UIItemEditText = "fghsfhsh";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ThisShouldBackwordsSlash'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ThisShouldBackwordsSlashParams
    {
        
        #region Fields
        /// <summary>
        /// Type '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' in text box
        /// </summary>
        public string UIItemEditText = "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUntitledNotepadWindow : WinWindow
    {
        
        public UIUntitledNotepadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Untitled - Notepad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Notepad";
            this.WindowTitles.Add("Untitled - Notepad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public WinTitleBar UIUntitledNotepadTitleBar
        {
            get
            {
                if ((this.mUIUntitledNotepadTitleBar == null))
                {
                    this.mUIUntitledNotepadTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIUntitledNotepadTitleBar.WindowTitles.Add("Untitled - Notepad");
                    #endregion
                }
                return this.mUIUntitledNotepadTitleBar;
            }
        }
        
        public UIApplicationMenuBar UIApplicationMenuBar
        {
            get
            {
                if ((this.mUIApplicationMenuBar == null))
                {
                    this.mUIApplicationMenuBar = new UIApplicationMenuBar(this);
                }
                return this.mUIApplicationMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private WinTitleBar mUIUntitledNotepadTitleBar;
        
        private UIApplicationMenuBar mUIApplicationMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("Untitled - Notepad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Untitled - Notepad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIApplicationMenuBar : WinMenuBar
    {
        
        public UIApplicationMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
            this.WindowTitles.Add("Untitled - Notepad");
            #endregion
        }
        
        #region Properties
        public UIFileMenuItem UIFileMenuItem
        {
            get
            {
                if ((this.mUIFileMenuItem == null))
                {
                    this.mUIFileMenuItem = new UIFileMenuItem(this);
                }
                return this.mUIFileMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFileMenuItem mUIFileMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFileMenuItem : WinMenuItem
    {
        
        public UIFileMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Untitled - Notepad");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UINewCtrlNMenuItem
        {
            get
            {
                if ((this.mUINewCtrlNMenuItem == null))
                {
                    this.mUINewCtrlNMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUINewCtrlNMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "New\tCtrl+N";
                    this.mUINewCtrlNMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUINewCtrlNMenuItem.WindowTitles.Add("Untitled - Notepad");
                    #endregion
                }
                return this.mUINewCtrlNMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUINewCtrlNMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIKeyLoggerWindow : WinWindow
    {
        
        public UIKeyLoggerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "KeyLogger";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("KeyLogger");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UIKeyLoggerTitleBar
        {
            get
            {
                if ((this.mUIKeyLoggerTitleBar == null))
                {
                    this.mUIKeyLoggerTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIKeyLoggerTitleBar.WindowTitles.Add("KeyLogger");
                    #endregion
                }
                return this.mUIKeyLoggerTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUIKeyLoggerTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINotepadWindow : WinWindow
    {
        
        public UINotepadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Notepad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Notepad");
            #endregion
        }
        
        #region Properties
        public UINotepadPane UINotepadPane
        {
            get
            {
                if ((this.mUINotepadPane == null))
                {
                    this.mUINotepadPane = new UINotepadPane(this);
                }
                return this.mUINotepadPane;
            }
        }
        #endregion
        
        #region Fields
        private UINotepadPane mUINotepadPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINotepadPane : WinPane
    {
        
        public UINotepadPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Notepad";
            this.WindowTitles.Add("Notepad");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Notepad");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Notepad");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        
        private WinButton mUICancelButton;
        #endregion
    }
}
