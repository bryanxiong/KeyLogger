// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest___Random_Strings
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using System.Threading;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// string4days - Use 'string4daysParams' to pass parameters into this method.
        /// </summary>
        public void string4days()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            string4daysParams s = new string4daysParams();
            String temp = s.GenRandomString();
            
            // Type 'Hello World!' in text box
            //string temp = string4daysParams.ToString();
            for (int i = 0; i < temp.Length; i++)
            {
                uIItemEdit.Text += temp[i].ToString();
                //uIItemEdit.Text = this.string4daysParams.UIItemEditText;
                //uIItemEdit.Text = temp[i].ToString();
                Thread.Sleep(50);
            }
        }
        
        #region Properties
        public virtual string4daysParams string4daysParams
        {
            get
            {
                if ((this.mstring4daysParams == null))
                {
                    this.mstring4daysParams = new string4daysParams();
                }
                return this.mstring4daysParams;
            }
        }
        
        public UIUntitledNotepadWindow UIUntitledNotepadWindow
        {
            get
            {
                if ((this.mUIUntitledNotepadWindow == null))
                {
                    this.mUIUntitledNotepadWindow = new UIUntitledNotepadWindow();
                }
                return this.mUIUntitledNotepadWindow;
            }
        }
        #endregion
        
        #region Fields
        private string4daysParams mstring4daysParams;
        
        private UIUntitledNotepadWindow mUIUntitledNotepadWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'string4days'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class string4daysParams
    {
        public String GenRandomString()
        {
            List<char> ret = new List<char> { };
            string result = "";
            Random rnd = new Random();
            int size = rnd.Next(10, 50);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(32, 126);

                ret.Insert(i,c);
                //ret += c + " ";
            }
            foreach (var v in ret)
            {
                result += v;
            }
            return result;

        }
        #region Fields
        /// <summary>
        /// Type 'Hello World!' in text box
        /// </summary>
        //public string UIItemEditText = GenRandomString();
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUntitledNotepadWindow : WinWindow
    {
        
        public UIUntitledNotepadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Untitled - Notepad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Notepad";
            this.WindowTitles.Add("Untitled - Notepad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("Untitled - Notepad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Untitled - Notepad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
}
