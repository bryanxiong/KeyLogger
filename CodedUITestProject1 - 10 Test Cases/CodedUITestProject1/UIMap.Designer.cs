// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TestForAsciiCharacter1 - Use 'TestForAsciiCharacter1Params' to pass parameters into this method.
        /// </summary>
        public void TestForAsciiCharacter1()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type 'aaaaaaaaaaa' in text box
            uIItemEdit.Text = this.TestForAsciiCharacter1Params.UIItemEditText;
        }
        
        /// <summary>
        /// TestForAsciiCharacter2 - Use 'TestForAsciiCharacter2Params' to pass parameters into this method.
        /// </summary>
        public void TestForAsciiCharacter2()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type 'bbbbbbbbbbbbbbb' in text box
            uIItemEdit.Text = this.TestForAsciiCharacter2Params.UIItemEditText;
        }

        public void TestForAsciiCharacter3()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            uIItemEdit.Text = this.TestForAsciiCharacter3Params.UIItemEditText;
        }

        public void TestForAsciiCharacter4()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            uIItemEdit.Text = this.TestForAsciiCharacter4Params.UIItemEditText;
        }

        public void TestForAsciiCharacter5()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            uIItemEdit.Text = this.TestForAsciiCharacter5Params.UIItemEditText;
        }
        public void TestForAsciiCharacter6()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            uIItemEdit.Text = this.TestForAsciiCharacter6Params.UIItemEditText;
        }

        public void TestForAsciiCharacter7()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            uIItemEdit.Text = this.TestForAsciiCharacter7Params.UIItemEditText;
        }
        public void TestForAsciiCharacter8()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            uIItemEdit.Text = this.TestForAsciiCharacter8Params.UIItemEditText;
        }
        public void TestForAsciiCharacter9()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion
            
            uIItemEdit.Text = this.TestForAsciiCharacter9Params.UIItemEditText;
        }

        public void TestForAsciiCharacter10()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIUntitledNotepadWindow.UIItemWindow.UIItemEdit;
            #endregion

            uIItemEdit.Text = this.TestForAsciiCharacter10Params.UIItemEditText;
        }
        #region Properties
        public virtual TestForAsciiCharacter1Params TestForAsciiCharacter1Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter1Params == null))
                {
                    this.mTestForAsciiCharacter1Params = new TestForAsciiCharacter1Params();
                }
                return this.mTestForAsciiCharacter1Params;
            }
        }
        
        public virtual TestForAsciiCharacter2Params TestForAsciiCharacter2Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter2Params == null))
                {
                    this.mTestForAsciiCharacter2Params = new TestForAsciiCharacter2Params();
                }
                return this.mTestForAsciiCharacter2Params;
            }
        }
        public virtual TestForAsciiCharacter3Params TestForAsciiCharacter3Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter3Params == null))
                {
                    this.mTestForAsciiCharacter3Params = new TestForAsciiCharacter3Params();
                }
                return this.mTestForAsciiCharacter3Params;
            }
        }
        public virtual TestForAsciiCharacter4Params TestForAsciiCharacter4Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter4Params == null))
                {
                    this.mTestForAsciiCharacter4Params = new TestForAsciiCharacter4Params();
                }
                return this.mTestForAsciiCharacter4Params;
            }
        }
        public virtual TestForAsciiCharacter5Params TestForAsciiCharacter5Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter5Params == null))
                {
                    this.mTestForAsciiCharacter5Params = new TestForAsciiCharacter5Params();
                }
                return this.mTestForAsciiCharacter5Params;
            }
        }
        public virtual TestForAsciiCharacter6Params TestForAsciiCharacter6Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter6Params == null))
                {
                    this.mTestForAsciiCharacter6Params = new TestForAsciiCharacter6Params();
                }
                return this.mTestForAsciiCharacter6Params;
            }
        }
        public virtual TestForAsciiCharacter7Params TestForAsciiCharacter7Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter7Params == null))
                {
                    this.mTestForAsciiCharacter7Params = new TestForAsciiCharacter7Params();
                }
                return this.mTestForAsciiCharacter7Params;
            }
        }
        public virtual TestForAsciiCharacter8Params TestForAsciiCharacter8Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter8Params == null))
                {
                    this.mTestForAsciiCharacter8Params = new TestForAsciiCharacter8Params();
                }
                return this.mTestForAsciiCharacter8Params;
            }
        }
        public virtual TestForAsciiCharacter9Params TestForAsciiCharacter9Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter9Params == null))
                {
                    this.mTestForAsciiCharacter9Params = new TestForAsciiCharacter9Params();
                }
                return this.mTestForAsciiCharacter9Params;
            }
        }
        public virtual TestForAsciiCharacter10Params TestForAsciiCharacter10Params
        {
            get
            {
                if ((this.mTestForAsciiCharacter10Params == null))
                {
                    this.mTestForAsciiCharacter10Params = new TestForAsciiCharacter10Params();
                }
                return this.mTestForAsciiCharacter10Params;
            }
        }


        public UIUntitledNotepadWindow UIUntitledNotepadWindow
        {
            get
            {
                if ((this.mUIUntitledNotepadWindow == null))
                {
                    this.mUIUntitledNotepadWindow = new UIUntitledNotepadWindow();
                }
                return this.mUIUntitledNotepadWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestForAsciiCharacter1Params mTestForAsciiCharacter1Params;
        
        private TestForAsciiCharacter2Params mTestForAsciiCharacter2Params;

        private TestForAsciiCharacter3Params mTestForAsciiCharacter3Params;
        private TestForAsciiCharacter4Params mTestForAsciiCharacter4Params;
        private TestForAsciiCharacter5Params mTestForAsciiCharacter5Params;
        private TestForAsciiCharacter6Params mTestForAsciiCharacter6Params;
        private TestForAsciiCharacter7Params mTestForAsciiCharacter7Params;
        private TestForAsciiCharacter8Params mTestForAsciiCharacter8Params;
        private TestForAsciiCharacter9Params mTestForAsciiCharacter9Params;
        private TestForAsciiCharacter10Params mTestForAsciiCharacter10Params;

        private UIUntitledNotepadWindow mUIUntitledNotepadWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter1Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(32, 32);
                ret += c;
            }
            return "These should be spaces \n" + ret + "\nIt should be blank until now";
        }
        #region Fields
        /// <summary>
        /// Type 'aaaaaaaaaaa' in text box
        /// </summary>
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter2Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(33,33);
                ret += "This should be an \"!\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        /// <summary>
        /// Type 'bbbbbbbbbbbbbbb' in text box
        /// </summary>
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter3Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(34, 34);
                ret += "This should be an \"''\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter4Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(35, 35);
                ret += "This should be an \"#\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter5Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(36, 36);
                ret += "This should be an \"$\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter6Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(37, 37);
                ret += "This should be an \"%\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter7Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(38, 38);
                ret += "This should be an \"&\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter8Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(39, 39);
                ret += "This should be an \"'\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter9Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(40, 40);
                ret += "This should be an \"(\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestForAsciiCharacter10Params
    {
        public static String GenAsciiChar()
        {
            string ret = "";
            Random rnd = new Random();
            int size = rnd.Next(5, 25);
            for (int i = 0; i < size; i++)
            {
                char c = (char)rnd.Next(41, 41);
                ret += "This should be an \")\" Ascii char: -- > " + c + " <--- \n";
            }
            return ret;
        }
        #region Fields
        public string UIItemEditText = GenAsciiChar();
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'TestForAsciiCharacter11'
    /// </summary>
    //[GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    //public class TestForAsciiCharacte11Params
    //{
    //    public static String GenAsciiChar()
    //    {
    //        string ret = "";
    //        Random rnd = new Random();
    //        int size = rnd.Next(5, 25);
    //        for (int i = 0; i < size; i++)
    //        {
    //            char c = (char)rnd.Next(42, 42);
    //            ret += "This should be an \"!\" Ascii char: -- > " + c + " <--- \n";
    //        }
    //        return ret;
    //    }
    //    #region Fields
    //    public string UIItemEditText = GenAsciiChar();
    //    #endregion
    //}
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUntitledNotepadWindow : WinWindow
    {
        
        public UIUntitledNotepadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Untitled - Notepad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Notepad";
            this.WindowTitles.Add("Untitled - Notepad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("Untitled - Notepad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Untitled - Notepad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
}
